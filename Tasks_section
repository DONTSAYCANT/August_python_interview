August 22:

#python 2 python 3 ==> difference ?
#Interpreter compiler ===> difference ?
#Why python ? advantages of python


August 24:

1) variable creation rules in python
2) integer float boolean character string
3) operators in python + - * / // ** %

August 25:
what is function
what is user def function
what is inbuilt function
1) print function in python
2) type function in python

August 26:

1. what is Keyword? please explain about 10 keywords in python
2. What is complex datatype please explain with example
3. end sep parameter in print function
4. Try some programs for print and type

August 28:

1. Data type conversion table 

#int ==> convert to float, str, bool
#float ==> convert to str, int, bool
#bool ==> convert to int float str
#Str ==> convert to int float bool

2. radius = 3.8 height 5.6 find area of cone (1/3 pi r * r * h) (properly commented , documented )
3. input function, range, int, float, bool, str ==> inbuilt functions (https://docs.python.org/3/library/functions.html)

August 29:

1. Get radius (int) and height (float) from user using input function
   Find the area of cylinder pi r*r h 
   Print area output in integer with formatted output

2. Area of the circel and circumference:

area pi r * r   cicr  2 pi r
collect radius from user as integer
print area (int) in formatted way
print circumference in string format in formatted way

3. round function 3.99999 ===> round function
4.98 ===> study about round function

4. String indexing or indices in python (Study)

https://realpython.com/python-strings/
https://realpython.com/lessons/string-indexing/

August 30:


Study:

https://realpython.com/python-strings/
https://realpython.com/lessons/string-indexing/

August 31:

"computer science"

print(a[-10:10:3])
print(a[-5:-1:1])
print(a[-8:-2:10])
print(a[5::3])
print(a[:5:2])
print(a[10:14:2])
print(a[-10:-3:3])
print(a[5:12:5])
print(a[3:-3:3])
print(a[-5:-3:20])

"Information_technology"
"Google_chrome_browser"

September 7:

1) Get one string from the user
   Identify the middle character of the string
   
2) Get two characters from user  example: "java" "groovy"
   java6groovy4
   
   "pi" "mathematics"  ===> pi15mahematics2
   
September 8
   
1) Get two characters from user "java" "gokul"
   j2ag3l
   
   "science" "social"
   s5es4l
   
 2) Get three strings from user
 
 maths  science  tamil  ===> mtsseetml ==> Concatenation of first letter,middle letter and last letter from all the three strings
 
 3) https://www.w3schools.com/python/python_ref_string.asp

4) Get two values (input) ===> number, string

#7 , "python" ===> pythonpythonpythonpythonpythonpythonpython777777

#3 , "perl"   ===> perlperlperl3333

5) 

#get two strings from user  computer science  ==> input 

#step 1 ==> comPuter  sciEnce

#step 2 ===> concatenate both ==> comPutersciEnce

#step 3 ===> comPuteRsciEnce

6)

#Get one string (Captial) ==> PYTHON
#Convert middle letter of the string in to small

PYThON

7) Get one string from user:

python   ===> PythoN  (convert first and last char to captial)


========================

September 9

1)  Get two values (input) ===> string, integer

#computer_science, 3 ===> mocputer_scieecn

#biology , 2  ===> iboloyg

#capital programs strings

2)
"Information_Technology"

#[-2:0:-1]
#[5:-5:5]
#[-5:5:-5]
#[5:-5:-5]
#[3:9:-1]
#[9:-10:-2]
#[2:-4:-4]
#[-4:2:-2]
#[0:-1:-3]
#[-3:3:6]
#[::-3]
#[::-2]
#[2:-2:-2]
#[2:-2:2]
#[5:-5:5]
#[3:-3:3]
#[::2]
#[::-5]

September 11:

SQL 100 points

https://www.hackerrank.com/domains/sql?filters%5Bstatus%5D%5B%5D=unsolved&filters%5Bstatus%5D%5B%5D=solved&filters%5Bskills%5D%5B%5D=SQL%20%28Basic%29&filters%5Bsubdomains%5D%5B%5D=select&filters%5Bdifficulty%5D%5B%5D=easy




September 13


Task1:

Get one string from user:

python  ====> ptoyhn
java  ===> jvaa
groovy  ===> govroy


Task2:

"python_is_using_interpreter"

#[-2:0:-1]
#[5:-5:5]
#[-5:5:-5]
#[5:-5:-5]
#[3:9:-1]
#[9:-10:-2]
#[2:-4:-4]
#[-4:2:-2]
#[0:-1:-3]
#[-3:3:6]
#[::-3]
#[::-2]
#[2:-2:-2]
#[2:-2:2]
#[5:-5:5]
#[3:-3:3]
#[::2]
#[::-5]

#Task3:

string1:  master
string2:  python

Output:  mason  (Concatenation of first part of string1 + second part od string 2)


string1: encyclopedia
string2: social

output: encyclal


#Task4:

string1: animal
string2: hello

output:   nael

string1: india
string2: python

output: niyo

#Task5:

string1: wikipedia
string2: typescript

output: p  +  c   ===> ascii value of p + ascii value of c  ====>  198


September 16:


Task1:

string1: python
String2: java

output ===> jythonpava64hv

Task2:

string1: ***python***
string1: **python********
string: ********java*******


output: python  (strip method )
https://www.w3schools.com/python/ref_string_strip.asp

Task3:

int1: 123
int2: 456

output: 123456579 


Task4:

String1: python  ==> h  ===> ascii value
Int1: 100  ==> D

string1 ==> middle character's ascii value
int ===> letter

105D


Task5: (name<space>float)

string1: "ravi 10.30"  
string2: "meghala 12.19"
string3: "Gokul 20.20"

split + indexing

10.30 + 12.19 + 20.20 ===> output ===> round (42.69000) 5 decimal places should be

https://www.w3schools.com/python/ref_string_strip.asp


September 17:

https://www.w3schools.com/python/python_ref_string.asp  (40 programs (each method))


September 18:

#https://www.w3schools.com/python/python_lists.asp
#https://www.w3schools.com/python/python_lists_methods.asp



September 21:

Task1:

https://www.w3schools.com/python/exercise.asp?filename=exercise_lists1

Task2:
List

#Create an empty list (two ways)
#Concatenate with [5,6,7,8]
#add 8,9,1,5,6,7,8,1 elements to that list
#Find frequency of 8 (count)
#find the mean of the list
#find sum (List) + min + Max 
#Find median of the list
#remove duplicates from list and give output in the format of tuple

Task2A:

https://github.com/DONTSAYCANT/Python_concepts/blob/master/Basic%20Datastructures%20and%20List%20Methods.ipynb

Task3:

https://www.w3schools.com/python/python_tuples.asp

Task4:

https://www.w3schools.com/python/python_sets.asp



September 23:

https://www.w3schools.com/python/python_ref_dictionary.asp

September 24:

Li1 = [2,3,4,5,[45,56,67,78,[111,222,333,[5555,3333,[10000,50000,"python","computer"],1111,7777,8888],444,555,666,777],89,23,34]]


5
56
222
50000
put
5555
7777
666
89
on
333
3333

https://github.com/DONTSAYCANT/Python_concepts/blob/master/Basic%20Datastructures%20and%20List%20Methods.ipynb


September 26

Task1

List

#Create an empty list
#Concatenate with [5,6,7,8,10]
#add 8,3,4,4,10,9,1,5,6,7,8,1 elements to that list
#Find frequency of 8 (count) and index of 10
#find the mean of the list
#find sum (List) + min + Max 
#Find median of the list
#remove duplicates from list and give output in the format of tuple
#convert to tuple and set

Task2


a = [1,2,3,4,[100,101,102,"Computer_science"],200,203]

Extract
#science
#computer

Task3
a = [1,2,3,4,[101,102,103,[201,202,[999]], 666, 777]]

Extract
#666
#201
#102
#999
#777


Task4:

Li1 = [2,3,"python","hello",4,5,0]  

Extract
#ll
#thon

Task5
Li1 = [1,2,3,4,5,[11,22,33,44,55,[111,222,333,444],6666,7777],7777]

Output Prediction 

print(Li1[5][0])
print(Li1[5][6])
print(Li1[5][-2])
print(Li1[5][7])
print(Li1[6])
print(Li1[5][5][1])

print(Li1[-2][-1])


print(Li1[2][2:4])

Task6: Tuple

#Create two tuples (1,4,5,6,7,8) (5,6,7,8,9)
#Find the common elements between two tuples
#Concatenate both tuples and remove duplicates from tuple
#Find the index value of 9 (after concatenation)
#multiply above elements 3 times

Task7: Sets

#Create two empty sets
#update set1 with 7,8,9,1,2,3,4,5,0
#update set2 with 4,5,6,0
#check whether set2 is subset of set1 or no ?
#check whether both have common elements are no ?
#remove 8 from set 1 and set 2 ==> find the inferences
#discard 0 from set1 and set2 
#find collection of both sets ===> set1 and set2

Task8:

 Dictionary:

#create a dictionary
#{1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
#Extract "bobtn" from above dictionary
#Extract "arbeg" from above dictionary
#print all keys in dictionary and convert it into tuple
#Find the average of all numbers available under key "2"

Task9

Difference between list tuple set dictionary

Task10

Study about all data structures and methods in detail (list tuple set dictionary)

September 27:

https://www.w3schools.com/python/python_conditions.asp
https://www.w3schools.com/python/gloss_python_else.asp

Get a number from user check whether postive or negative
Get a number from user check whether odd or even
Get a character from user check whether small case or upper case
Get a string from user check whether length is even or odd
Get list from user check whether length is odd or even

September 28:

#program1
#Get one string from user
#extract middle letter of the string
#check whether middle letter is vowel or no

#program2
#Get one string from user
#Find the middle letter
#find ascii value for the middle letter
#check whether ascii value is odd or even

#program3:
#get one string from user
#check whether length of the string is odd or even

#program4:
#Get one string from user
#check whether string is palindrome or no

#program5:
#Get one mark from student
#mark 0 to 100 otherwise invalid mark

#50 + PASS otherwise FAIL
#90 to 100 ===> A  ==> Even + Odd -
#80 to 89 ===> B
#70 to 79 ===> C
#60 to 69 ===> D
#50 to 59 ===> E

#0 to 49 ===> FAIL


#93 ===> A-
#99 ===> A-
#88 ====> B+

#78

#VALID MARK
#PASS MARK
#B+

#program6

#hackerrank Write a function

#program7
#hackerrank Python If-Else

#program8 

#two strings from user
#string 1: python  ==> first + middle + last 
#string 2: ptn

#valid otherwise invalid

#program9:

#two strings from user

#mathematics ===> 4 vowels
#science ==> 3 vowels

#both are equal count or not equal

#program10

#get one integer from user
#armstrong or no (without using loops)

#153 ===> 1^3 + 5^3 + 3^3
#370 ===> 3^3 + 7^3 + 0^3
#371 ====> 3^3 + 7^3 + 1^3


#program 11:
#[123, 124, 125,]  length of list odd or even


#program12:
#Fizz buzz
#Get one number from user
#5
#Multiple of 3 ==> Fizz
#Multiple of 5 ===> buzz
#Multiple of 3 and 5 ===> Fizzbuzz
#None ==> Invalid number



#References:

#https://www.guru99.com/if-loop-python-conditional-structures.html
#https://realpython.com/python-conditional-statements/
#https://www.w3schools.com/python/python_conditions.asp

September 30:

https://www.w3schools.com/python/python_for_loops.asp
https://www.w3schools.com/python/python_while_loops.asp

physics chemistry maths

cutoff = phy/4 + chem/4 + maths/2

college selection

70-100 ===> college 5
100-125 ==> college 4
125 - 150 ==> college 3
150-190 ==> college 2
cutoff ===> 190-200 ==> college1

Others: Not eligible (0-70)
Others: < 0 or > 200 ===> Invalid mark

any one subject 200 : bronze medal
any two subject 200 : silver medal
all the three : gold medal

<70 in any one subject ===> no college, no cutoff, no grade

199, 199, 199  

Valid mark
pass mark
cutoff mark: 199
No medal
College 1

200 200 60

Valid mark
Fail mark
Cutoff mark: No cutoff
No medal
No college

205 100 105

Invalid mark


October 2:

#Task1:

#Armstrong number check

i) get one 3 digit number from user (100-999)

ii) print armstrong or no

153 == 1^3 + 5^3 + 3^3 == 1+125+27

152 == 1^3 + 5^3 + 2^3 != 134

108

370 ==> 27 + 343 + 0 ==> 370

Task2:
Li1 = [2,3,4,5,6,7,10,11,12,15,2,10000]


even
i) sort() [2, 2, 3, 4, 5, 6, 7, 10, 11, 12, 15, 10000]
ii) Find two middle numbers 6,7
ii) average of two numbers 6.5

Odd

i) sort() [2, 2, 3, 4, 5, 6, 7, 10, 11, 12, 15, 10000]
ii) [2, 2, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 10000]
7

Li2 = [2,3,4,5,6,7,10,11,12,15,2,10000,14]

Task3:

 Write a Python program to convert month name to a number of days.

Get one month from user

April ==> 30
gggg ==> Invalid month valid month
feb ==> 28  ? 

please enter year ? 

%4 ==> leap year 2004 2008 2012 2100==> not leap year
2000 2100 2200 2300 2400 2500 ==> multiplied by 400 also 

October2: Tasks:

Task1:

input: get a colour user

VIBGYOR

INDIGO  ==> it's available in rainbow and colour number is 2

Rose  ==> IT's not available and no colour code

Task2:

#Get a character from user (alphabet, small, upper, number, special char)

Find what;s that
clue: ascii

Task3:

anagram

i) get two strings from user

str1: pot str2: top ==> anagrams
str1: python  str2: java ==> not anagrams
str1 abcd  str2: cdab  ===> anagram


Tasks4:

prime
anagram
palindrome
fibonacci
factorial
composite number
muliple
multiplier
factors
lcm
gcd
armstrong

Task5:

i)Month name

complete restrictions: december, january, march  ===> No nonveg
Partial restriction: august, september, november ===> get week day from user ==> friday/tuesday no nonveg Other days: Non veg
Other months: No restiction: Non veg

if :
elif:
   if
   else
else

October 3:


Task1:

#Using Range function  print multiples of 5 from 0 to 75
#Using Range function  print multiples of 8 from 0 to 72

#Using Range function  print multiples of 5 from 75 to 0
#Using Range function  print multiples of 8 from 96 to 72

October 8:

Task1:

https://www.w3schools.com/python/python_for_loops.asp
https://www.w3schools.com/python/python_while_loops.asp
https://github.com/DONTSAYCANT/python_may_june_batch/blob/main/Loops%20.ipynb

Task2:

Multiple index with list value 

[2,5,6,8,12,13]

2*0 + 5*1 + 6*2 + 8*3 + 12*4 + 13*5 ==> 

[2,5,6,8,12,13,2,2,0]

[1,1,1]


Task3:

Get a dynamic list from user

Task4:

Get a dynamic dictionary from user

clues Task3 and Task4
#1. get number of elements from user
#Loop through range
#append to list/dictionary


a = int(input("enter number of elements"))

for i in range(a):
    val = int(input("enter element"))

Task5:

Get two integers from user
print multiples of 8 between them

clues:
Use range function in for loop
Use if condition inside for loop
add in to list

input 10 100
multiples of 8

[16,24,32.....,96]

#Task 6:

Input:
Li1 = [3,4,5,2,7,8,9,10]

Output:
Li_odd = [3,5,7,9]
Li_even = [4,2,8,10]

#Li1 = [3,4,5,2,7,8,9,10]

#Clue

for i in Li1:
    print(i)
    if i % 2 == 0:
        print("EVEN")
    else:
        print("ODD")
        
Task7:

Input: [-1, -7,8,10,20,21,17,28,-3,0,0,]
    
Output:
neg_LI = [-1,-7,-3]
pos_LI = []
Zeros = []

Numeber of postivie ele: 7
Number nega: 3
Number of zeros: 2

CLue: previous program and len function

September 10:

Task1:

Study range function and for loop properly

https://www.w3schools.com/python/python_for_loops.asp
https://www.w3schools.com/python/python_while_loops.asp
https://github.com/DONTSAYCANT/python_may_june_batch/blob/main/Loops%20.ipynb

print(list(range(5)))
print(list(range(1,5)))
print(list(range(5,20)))
print(list(range(-5,5)))
print(list(range(10,100,10)))
print(list(range(10,0,-1)))
print(list(range(-5,5,3)))
print(list(range(10,100,5)))
print(list(range(10,0,-2)))

Task2:

Get list of strings from user
separate it in to two lists with vowles and non vowels 

["hi","ggg","hello","ravi","bbbb","zzz","yyyy"]

No of elements with vowel: 4
No of elements without vowel: 3


Task3:

Get list of strings from user
separate it two list (with same first letter and last letter and othr)

["garg", "kohli", "rohitr", "ishan", "dhoni","dad"]

No of elements with same first letter and last letter: 3
Other List: 3


Task4:

Get a list of numbers from user
separate it in to even number and odd number (you should create only one empty list)


Task5: 

fibonacci series

0,1,1,2,3,5,8,13,21,34,55,89,144

get one input from user: 5

[0,1,1,2,3]
3

user: 8

[0,1,1,2,3,5,8,13]
13

[0,1,1,2,3]

Task6:

No range function  

Multiples of 10 between 12 to 100 using while loop
Multiples of 8 between 120 to 20 using while loop
Multiples of 5 between 9 to 40 using while loop
Multiples of 8 between 300 to 200 using while loop

Task7:

#print all elements in the list using while loop

example for loop

for i in Li1:
    print(i)
    
1. calculate len
2. decrement one by one in while
    
Task8:

check whether a number is armstrong or not using while loop
Dont convert number to string 

Task9:

#Get one dynamic list from user

#10 [0,6,5,-3,4,5,3,-2,4,0]

#count ==> no of zeros, no of positive values, no of negative values, no of odd numbers, number of even numbers
#print the elements


Task10:

#two numbers from user 2 25
#2 
#3  fizz
#4
#15
#16
#25

#multiple of 3 ==> fizz
#multiple of 5 ==> buzz
#multiple of 15 ==> fizzbuzz
#Others ===> No fizz and buzz

#Including last number

==========================================================================

October 11:


Task11:

Factorial number

5 ==> 5 * 4 * 3* 2 * 1
120

Task12:

Get one number from user
Sum of digits

325 ==> 10

Task13:

sum of digits till it become single digit

Task14:

Product of digits

Task15:

#multiples of a number 

#Get one integer from the user
#9 ==> 1,3,9
#11 ==> 1,11
#25 ==> 1,5,25

Task16:

#Anagram ===> check whether given string is anagram or no

#Two input strings
#pot
#top

#top
#pto


October 17:  Test 1 (50 marks == 25 MCQ + 5 pgms)





